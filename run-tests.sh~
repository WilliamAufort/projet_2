#!/bin/bash

rm -f comparaison.dat
echo "nb_var normal rand" >> comparaison.dat

for nb_var in `seq 40 41`; do

cd "generateur 3_SAT" 
 ./calc $nb_var $((4*nb_var)) # On cree la formule 
cp ex.cnf ../version_op
cp ex.cnf ../version_op_rand


# on envoie la valeur de entree a la commande /usr/bin/time ....
# cette commande execute l'algo normal, recupere le temps utilisateur,
# et stocke cette valeur dans le fichier /tmp/toto.txt
 
cd ../version_op
  echo $entree | /usr/bin/time -f'%U' -o /tmp/toto.txt ./resol ex.cnf
# on recupere ensuite dans TEMPS1 le contenu de /tmp/toto.txt
  TEMPS1=`cat /tmp/toto.txt`

cd ../version_op_rand
# meme chose avec rand
  echo $entree | /usr/bin/time -f'%U' -o /tmp/toto.txt ./resol ex.cnf 
  TEMPS2=`cat /tmp/toto.txt`

cd ..

# pour finir, on ajoute une ligne (3 colonnes) au fichier ./comparaison.dat
  echo $nb_var $TEMPS1  $TEMPS2 >> ./comparaison.dat 

done


# a noter que vous pouvez passer un ou plusieurs arguments a ce
# script, auxquels vous ferez reference par $1, $2, etc. Par exemple,
# vous pourrez taper "bash run-tests.sh toto.dat (pour indiquer le nom
# du fichier rassemblant les resultats des tests), et faire dans ce
# fichier 'echo "argument Fibonacci Fibonacci-memo" >> $1
